<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="FB">

	<typeAlias alias="LabelValueBean"	type="com.fb.vo.LabelValueBean" />
	<typeAlias alias="Lookup"			type="com.fb.vo.Lookup" />
	<typeAlias alias="MenuVO"			type="com.fb.vo.MenuVO" />
	<typeAlias alias="MenuFuncVO"		type="com.fb.vo.MenuFuncVO" />
	<typeAlias alias="UserProfVO"		type="com.fb.vo.UserProfVO" />
	<typeAlias alias="CustProfVO"		type="com.fb.vo.CustProfVO" />
	<typeAlias alias="ProdProfVO"		type="com.fb.vo.ProdProfVO" />
	<typeAlias alias="FactProfVO"		type="com.fb.vo.FactProfVO" />
	<typeAlias alias="StockProfVO"		type="com.fb.vo.StockProfVO" />
	<typeAlias alias="CustProdHisVO"	type="com.fb.vo.CustProdHisVO" />
	<typeAlias alias="FactProdHisVO"	type="com.fb.vo.FactProdHisVO" />
	<typeAlias alias="ProdStockQtyVO"	type="com.fb.vo.ProdStockQtyVO" />
	<typeAlias alias="OfferMasterVO"	type="com.fb.vo.OfferMasterVO" />
	<typeAlias alias="OfferDetailVO" 	type="com.fb.vo.OfferDetailVO" />
	<typeAlias alias="PurchaseMasterVO"	type="com.fb.vo.PurchaseMasterVO" />
	<typeAlias alias="PurchaseDetailVO"	type="com.fb.vo.PurchaseDetailVO" />
	<typeAlias alias="PickProdVO"		type="com.fb.vo.PickProdVO" />
	<typeAlias alias="PickOfferVO"		type="com.fb.vo.PickOfferVO" />

	<resultMap id="UserResult" class="UserProfVO">
		<result property="userId"		column="U.USER_ID"/>
		<result property="userNme"		column="U.USER_NME"/>
		<result property="userPwd"		column="U.USER_PWD"/>
		<result property="userClass"	column="U.USER_CLASS"/>
	</resultMap>
	<resultMap id="MenuResult" class="MenuVO">
		<result property="menuId"		column="M.MENU_ID"/>
		<result property="menuLabel"	column="M.MENU_LABEL"/>
		<result property="folderFlag"	column="M.FOLDER_FLAG"/>
		<result property="order"		column="M.DISPLAY_orDER"/>
	</resultMap>
	<resultMap id="MenuFuncResult" class="MenuFuncVO">
		<result property="funcId"		column="MF.FUNC_ID"/>
		<result property="funcLabel"	column="MF.FUNC_LABEL"/>
		<result property="url"			column="MF.URL"/>
		<result property="linkType"		column="MF.LINK_TYPE"/>
		<result property="order"		column="MF.DISPLAY_orDER"/>
		<result property="menu"			resultMap="FB.MenuResult"/>
	</resultMap>
	<resultMap id="CustResult" class="CustProfVO">
		<result property="custId"		column="C.CUST_ID"/>
		<result property="custNme"		column="C.CUST_NME"/>
		<result property="bizNo"		column="C.BIZ_NO"/>
		<result property="deliverAddr"	column="C.DELIVER_ADDR"/>
		<result property="tel"			column="C.TEL"/>
		<result property="memo"			column="C.MEMO"/>
	</resultMap>
	<resultMap id="ProdResult" class="ProdProfVO">
		<result property="prodId"		column="P.PROD_ID"/>
		<result property="prodNme"		column="P.PROD_NME"/>
		<result property="unit"			column="P.UNIT"/>
		<result property="price"		column="P.PRICE"/>
		<result property="cost"			column="P.COST"/>
		<result property="saveQty"		column="P.SAVE_QTY"/>
	</resultMap>
	<resultMap id="FactResult" class="FactProfVO">
		<result property="factId"		column="F.FACT_ID"/>
		<result property="factNme"		column="F.FACT_NME"/>
		<result property="bizNo"		column="F.BIZ_NO"/>
		<result property="contact"		column="F.CONTACT"/>
		<result property="addr"			column="F.ADDR"/>
		<result property="tel"			column="F.TEL"/>
		<result property="memo"			column="F.MEMO"/>
	</resultMap>
	<resultMap id="StockResult" class="StockProfVO">
		<result property="stockId"		column="S.STOCK_ID"/>
		<result property="stockNme"		column="S.STOCK_NME"/>
		<result property="addr"			column="S.ADDR"/>
	</resultMap>
	<resultMap id="OfferMasterResult" class="OfferMasterVO" groupBy="id">
		<result property="id"			column="M.ID"/>
		<result property="offerDate"	column="M.OFFER_DATE"/>
		<result property="invoiceNbr"	column="M.INVOICE_NBR"/>
		<result property="amt"			column="M.AMT"/>
		<result property="discount"		column="M.DISCOUNT"/>
		<result property="total"		column="M.TOTAL"/>
		<result property="cost"			column="M.COST"/>
		<result property="receiveAmt"	column="M.RECEIVE_AMT"/>
		<result property="memo"			column="M.MEMO"/>
		<result property="back"			column="M.BACK"/>
		<result property="status"		column="M.STATUS"/>
		<result property="cust"			resultMap="FB.CustResult"/>
		<result property="deliveryUser"	resultMap="FB.UserResult"/>
		<result property="stock"		resultMap="FB.StockResult"/>
		<result property="details"		resultMap="FB.OfferDetailResult"/>
	</resultMap>
	<resultMap id="OfferDetailResult" class="OfferDetailVO">
		<result property="id"			column="D.ID"/>
		<result property="masterId"		column="D.MASTER_ID"/>
		<result property="qty"			column="D.QTY"/>
		<result property="amt"			column="D.AMT"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>
	<resultMap id="PurchaseMasterResult" class="PurchaseMasterVO" groupBy="id">
		<result property="id"			column="M.ID"/>
		<result property="purchaseDate"	column="M.PURCHASE_DATE"/>
		<result property="invoiceNbr"	column="M.INVOICE_NBR"/>
		<result property="amt"			column="M.AMT"/>
		<result property="discount"		column="M.DISCOUNT"/>
		<result property="total"		column="M.TOTAL"/>
		<result property="memo"			column="M.MEMO"/>
		<result property="back"			column="M.BACK"/>
		<result property="status"		column="M.STATUS"/>
		<result property="fact"			resultMap="FB.FactResult"/>
		<result property="stock"		resultMap="FB.StockResult"/>
		<result property="details"		resultMap="FB.PurchaseDetailResult"/>
	</resultMap>
	<resultMap id="PurchaseDetailResult" class="PurchaseDetailVO">
		<result property="id"			column="D.ID"/>
		<result property="masterId"		column="D.MASTER_ID"/>
		<result property="qty"			column="D.QTY"/>
		<result property="amt"			column="D.AMT"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>	
	<resultMap id="ProdStockQtyResult" class="ProdStockQtyVO">
		<result property="stockId"		column="PSQ.STOCK_ID"/>
		<result property="prodId"		column="PSQ.PROD_ID"/>
		<result property="qty"			column="PSQ.QTY"/>
		<result property="stock"		resultMap="FB.StockResult"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>
	<resultMap id="UnReceivedOfferResult" class="OfferMasterVO">
		<result property="id"			column="M.ID"/>
		<result property="offerDate"	column="M.OFFER_DATE"/>
		<result property="invoiceNbr"	column="M.INVOICE_NBR"/>
		<result property="amt"			column="M.AMT"/>
		<result property="discount"		column="M.DISCOUNT"/>
		<result property="total"		column="M.TOTAL"/>
		<result property="cost"			column="M.COST"/>
		<result property="receiveAmt"	column="M.RECEIVE_AMT"/>
		<result property="memo"			column="M.MEMO"/>
		<result property="back"			column="M.BACK"/>
		<result property="cust"			resultMap="FB.CustResult"/>
	</resultMap>
	<resultMap id="TopDiscountOfferResult" class="OfferMasterVO">
		<result property="id"			column="M.ID"/>
		<result property="offerDate"	column="M.OFFER_DATE"/>
		<result property="amt"			column="M.AMT"/>
		<result property="discount"		column="M.DISCOUNT"/>
		<result property="receiveAmt"	column="M.RECEIVE_AMT"/>
	</resultMap>
	<resultMap id="PickCustResult" class="CustProfVO">
		<result property="custId"		column="X.CUST_ID"/>
		<result property="custNme"		column="Y.CUST_NME"/>
	</resultMap>
	<resultMap id="PickProdResult" class="PickProdVO" groupBy="prodId">
		<result property="prodId"		column="A.PROD_ID"/>
		<result property="prodNme"		column="A.PROD_NME"/>
		<result property="unit"			column="A.UNIT"/>
		<result property="sumQty"		column="A.SUM_QTY"/>
		<result property="offers"		resultMap="FB.PickOfferResult"/>
	</resultMap>
	<resultMap id="PickOfferResult" class="PickOfferVO">
		<result property="masterId"		column="MASTER_ID"/>
		<result property="custId"		column="B.CUST_ID"/>
		<result property="custNme"		column="B.CUST_NME"/>
		<result property="qty"			column="B.QTY"/>
	</resultMap>

	<parameterMap id="getSequenceParam" class="map">
		<parameter property="PI_SEQ_ID"		mode="IN"	jdbcType="VARCHAR" />
		<parameter property="PI_SEQ_PREFIX"	mode="IN"	jdbcType="VARCHAR" />
		<parameter property="PO_SEQ_NBR"	mode="OUT"	jdbcType="NUMBER" />
	</parameterMap>
	<procedure id="getSequence" parameterMap="getSequenceParam">
		{call sp_get_sequence(?, ?, ?)}
	</procedure>

	<insert id="insertLookup" parameterClass="Lookup">
		insert into tb_lookup 
		values (
			#type#,
			#code#,
			#name#,
			#display#,
			#displayOrder#,
			#desc#
		)
	</insert>
	<insert id="insertFuncAuth" parameterClass="map">
		insert into tb_FUNC_AUTH values (#userClass#, #funcId#)
	</insert>
	<insert id="insertMenuFunc" parameterClass="MenuFuncVO">
		insert into tb_MENU_FUNC values (NULL, #funcLabel#, #menuId#, #url#, #linkType#, 'Y', #order#)
	</insert>
	<insert id="insertMenu" parameterClass="MenuVO">
		insert into tb_MENU values (NULL, #menuLabel#, NULL, 'Y', #order#, #folderFlag#)
	</insert>
	<insert id="insertCust" parameterClass="CustProfVO">
		insert into tb_CUST values (NULL, #custNme#, #bizNo#, #deliverAddr#, #tel#, #memo#, '', USER(), NOW())
	</insert>
	<insert id="insertProd" parameterClass="ProdProfVO">
		insert into tb_PROD values (NULL, #prodNme#, #unit#, #price#, #cost#, #saveQty#, '', USER(), NOW())
	</insert>
	<insert id="insertFact" parameterClass="FactProfVO">
		insert into tb_FACT values (NULL, #factNme#, #bizNo#, #contact#, #addr#, #tel#, #memo#, '', USER(), NOW())
	</insert>
	<insert id="insertProdStockQty" parameterClass="ProdStockQtyVO">
		insert into tb_PROD_STOCK_QTY values (#stockId#, LAST_INSERT_ID(), #qty#)
	</insert>
	<insert id="insertOfferMaster" parameterClass="OfferMasterVO">
		insert into tb_OFFER_MASTER values (#id#, #offerDate#, #custId#, #invoiceNbr#, #stockId#, #amt#, #discount#, #total#, #cost#, #receiveAmt#, #memo#, #back#, #status#, #deliveryUserId#)
	</insert>
	<insert id="insertOfferDetail" parameterClass="OfferDetailVO">
		insert into tb_OFFER_DETAIL values (NULL, #masterId#, #prodId#, #qty#, #amt#)
	</insert>
	<insert id="insertCustProdHis" parameterClass="CustProdHisVO">
		insert into tb_CUST_PROD_HIS values (NULL, #custId#, #prodId#, #price#, #offerId#)
	</insert>
	<insert id="insertPurchaseMaster" parameterClass="PurchaseMasterVO">
		insert into tb_PURCHASE_MASTER values (#id#, #purchaseDate#, #factId#, #invoiceNbr#, #stockId#, #amt#, #discount#, #total#, #memo#, #back#, #status#)
	</insert>
	<insert id="insertPurchaseDetail" parameterClass="PurchaseDetailVO">
		insert into tb_PURCHASE_DETAIL values (NULL, #masterId#, #prodId#, #qty#, #amt#)
	</insert>
	<insert id="insertFactProdHis" parameterClass="FactProdHisVO">
		insert into tb_FACT_PROD_HIS values (NULL, #factId#, #prodId#, #price#, #purchaseId#)
	</insert>
	
	<update id="updateLookup" parameterClass="Lookup">
		update tb_LOOKUP 
		set 
			LOOKUP_CDE = #lookupCde#, 
			LOOKUP_NME = #lookupNme#, 
			DISPLAY_FLAG = #displayFlag#, 
			DISPLAY_orDER = #displayorder#, 
			DSCR = #dscr#
		where LOOKUP_TYPE = #lookupType#
	</update>
	<update id="updateMenuFunc" parameterClass="MenuFuncVO">
		update tb_MENU_FUNC 
		set 
			FUNC_LABEL = #funcLabel#,
			MENU_ID = #menuId#,
			URL = #url#,
			LINK_TYPE = #linkType#,
			DISPLAY_orDER = #order# 
		where FUNC_ID = #funcId#
	</update>
	<update id="updateMenu" parameterClass="MenuVO">
		update tb_MENU 
		set 
			MENU_LABEL = #menuLabel#,
			FOLDER_FLAG = #folderFlag#,
			DISPLAY_orDER = #order# 
		where MENU_ID = #menuId#
	</update>
	<update id="updateCust" parameterClass="CustProfVO">
		update tb_CUST 
		set 
			CUST_NME = #custNme#, 
			BIZ_NO = #bizNo#, 
			DELIVER_ADDR = #deliverAddr#, 
			TEL = #tel#, 
			MEMO = #memo#, 
			USTAMP = USER(), TSTAMP = NOW() 
		where CUST_ID = #custId#
	</update>
	<update id="updateFact" parameterClass="FactProfVO">
		update tb_FACT 
		set 
			FACT_NME = #factNme#, 
			BIZ_NO = #bizNo#,
			CONTACT = #contact#, 
			ADDR = #addr#, 
			TEL = #tel#, 
			MEMO = #memo#, 
			USTAMP = USER(), TSTAMP = NOW() 
		where FACT_ID = #factId#
	</update>
	<update id="updateProd" parameterClass="ProdProfVO">
		update tb_PROD 
		set 
			PROD_NME = #prodNme#, 
			UNIT = #unit#, 
			PRICE = #price#, 
			SAVE_QTY = #saveQty#, 
			USTAMP = USER(), TSTAMP = NOW() 
		where PROD_ID = #prodId#
	</update>
	<update id="updateProdCost" parameterClass="ProdProfVO">
		update tb_PROD 
		set 
			COST = #cost#, 
			USTAMP = USER(), TSTAMP = NOW() 
		where PROD_ID = #prodId#
	</update>
	<update id="updateOfferMaster" parameterClass="OfferMasterVO">
		update tb_OFFER_MASTER 
		set 
			DELIVERY_USER_ID = #deliveryUserId#,
			OFFER_DATE = #offerDate#,
			INVOICE_NBR = #invoiceNbr#, 
			STOCK_ID = #stockId#, 
			AMT = #amt#, 
			DISCOUNT = #discount#, 
			TOTAL = #total#,
			COST = #cost#, 
			RECEIVE_AMT = #receiveAmt#, 
			MEMO = #memo#, 
			STATUS = #status#
		where ID = #id#
	</update>
	<update id="updateOfferReceiveAmt" parameterClass="OfferMasterVO">
		update tb_OFFER_MASTER 
		set RECEIVE_AMT = #receiveAmt#
		where ID = #id#
	</update>
	<update id="updateProdStockQty" parameterClass="ProdStockQtyVO">
		update tb_PROD_STOCK_QTY 
		set 
			QTY = QTY + #qty# 
		where STOCK_ID = #stockId# and PROD_ID = #prodId#
	</update>

	<delete id="deleteLookup" parameterClass="Lookup">
		DELETE from tb_LOOKUP where LOOKUP_TYPE = #lookupType#
	</delete>
	<update id="deleteMenuFunc" parameterClass="int">
		update tb_MENU_FUNC 
		set STATUS_FLAG = 'D' 
		where FUNC_ID = #value#
	</update>
	<update id="deleteMenu" parameterClass="int">
		update tb_MENU 
		set STATUS_FLAG = 'D' 
		where MENU_ID = #value#
	</update>
	<update id="deleteFuncAuth" parameterClass="string">
		DELETE from tb_FUNC_AUTH where USER_CLASS = #value#
	</update>
	<update id="deleteCust" parameterClass="int">
		update tb_CUST 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where CUST_ID = #value#
	</update>
	<update id="deleteCusts" parameterClass="string">
		update tb_CUST 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where CUST_ID IN ($value$)
	</update>
	<update id="deleteFact" parameterClass="int">
		update tb_FACT 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where FACT_ID = #value#
	</update>
	<update id="deleteFacts" parameterClass="string">
		update tb_FACT 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where FACT_ID IN ($value$)
	</update>	
	<update id="deleteProd" parameterClass="int">
		update tb_PROD 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where PROD_ID = #value#
	</update>
	<update id="deleteProds" parameterClass="string">
		update tb_PROD 
		set STATUS_FLAG = 'D', USTAMP = USER(), TSTAMP = NOW() 
		where PROD_ID IN ($value$)
	</update>
	<delete id="deleteCustProdHis" parameterClass="string">
		DELETE from tb_CUST_PROD_HIS where OFFER_ID = #value#
	</delete>
	<update id="deleteOffer" parameterClass="string">
		update tb_OFFER_MASTER 
		set STATUS = 'D' 
		where ID = #value#
	</update>
	<delete id="deleteOfferDetails" parameterClass="string">
		DELETE from tb_OFFER_DETAIL 
		where MASTER_ID = #value#
	</delete>
	<update id="deletePurchase" parameterClass="string">
		update tb_PURCHASE_MASTER 
		set STATUS = 'D' 
		where ID = #value#
	</update>

	<select id="selectLookup" parameterClass="Lookup" resultClass="LabelValueBean">
		select 
		LOOKUP_CDE AS value,
		LOOKUP_NME AS label
		from tb_LOOKUP
		where LOOKUP_TYPE = #lookupType# and DISPLAY_FLAG = #displayFlag#
		order by DISPLAY_orDER
	</select>
	<select id="selectAuthMenuFuncs" parameterClass="map" resultMap="MenuFuncResult">
		select * 
		from
			tb_FUNC_AUTH FA, 
			tb_MENU_FUNC MF, 
			tb_MENU M 
		where 
			FA.USER_CLASS = #userClass# and 
			FA.FUNC_ID = MF.FUNC_ID and 
			MF.MENU_ID = M.MENU_ID and 
			MF.STATUS_FLAG = 'Y' and
			M.STATUS_FLAG = 'Y'
		<isNotNull property="url" prepend="and"> MF.URL like #url#</isNotNull>
		order by M.DISPLAY_orDER, MF.DISPLAY_orDER
	</select>	
	<select id="selectMenu" parameterClass="MenuVO" resultMap="MenuResult">
		select * from tb_MENU M
		where M.STATUS_FLAG = 'Y'
		<isNotNull property="menuId" prepend="and"> M.MENU_ID = #menuId#</isNotNull>
		order by M.MENU_ID ASC
	</select>
	<select id="selectMenuFunc" parameterClass="MenuFuncVO" resultMap="MenuFuncResult">
		select * 
		from
			tb_MENU M,
			tb_MENU_FUNC MF
		where 
			MF.STATUS_FLAG = 'Y' and
			M.MENU_ID = MF.MENU_ID
		<isNotNull property="funcId" prepend="and"> MF.FUNC_ID = #funcId#</isNotNull>
		order by MF.FUNC_ID ASC
	</select>
	<select id="selectUser" parameterClass="UserVO" resultMap="UserResult">
		select * from tb_user
		where status = ''
		<isNotNull property="id" prepend="and"> U.USER_ID = #userId#</isNotNull>
		<isNotNull property="passwd" prepend="and"> U.USER_PWD = #userPwd#</isNotNull>
		<isNotNull property="grade" prepend="and"> U.USER_CLASS IN ($userClass$)</isNotNull>
	</select>
	<select id="selectStockProf" parameterClass="int" resultMap="StockResult">
		select * from tb_STOCK where STOCK_ID = #value#
	</select>
	<select id="selectCustProf" parameterClass="CustProfVO" resultMap="CustResult">
		select * from tb_CUST C
		where C.STATUS_FLAG = ''
		<isNotNull property="custId" prepend="and"> C.CUST_ID = #custId#</isNotNull>
		<isNotNull property="custNme" prepend="and"> C.CUST_NME like #custNme#</isNotNull>
		order by C.CUST_NME ASC
	</select>
	<select id="selectFactProf" parameterClass="FactProfVO" resultMap="FactResult">
		select * from tb_FACT F
		where F.STATUS_FLAG = ''
		<isNotNull property="factId" prepend="and"> F.FACT_ID = #factId#</isNotNull>
		<isNotNull property="factNme" prepend="and"> F.FACT_NME like #factNme#</isNotNull>
		order by FACT_NME ASC
	</select>
	<select id="selectProdProf" parameterClass="ProdProfVO" resultMap="ProdResult">
		select * from tb_PROD P
		where P.STATUS_FLAG = ''
		<isNotNull property="prodId" prepend="and"> P.PROD_ID = #prodId#</isNotNull>
		<isNotNull property="prodNme" prepend="and"> P.PROD_NME like #prodNme#</isNotNull>
		order by PROD_NME ASC
	</select>
	<select id="selectProdByCust" parameterClass="map" resultClass="ProdProfVO">
		(select PROD_ID AS prodId, PROD_NME AS prodNme, PRICE AS price
			from tb_PROD
			where 
				PROD_ID NOT IN (select PROD_ID from tb_CUST_PROD_HIS where CUST_ID = #custId#)
				<isNotNull property="prodNme" prepend="and"> PROD_NME like #prodNme#</isNotNull>
		) UNION DISTINCT
		(select HIS.PROD_ID AS prodId, PROD.PROD_NME AS prodNme, HIS.PRICE AS price
			from tb_PROD PROD, tb_CUST_PROD_HIS HIS
			where
				HIS.CUST_ID = #custId# and
				PROD.PROD_ID = HIS.PROD_ID
				<isNotNull property="prodNme" prepend="and"> PROD_NME like #prodNme#</isNotNull>
		)
		order by prodId ASC
	</select>
	<select id="selectCustProdHis" parameterClass="CustProdHisVO" resultClass="CustProdHisVO">
		select
			CUST.CUST_ID AS custId, CUST.CUST_NME AS custNme,
			PROD.PROD_ID AS prodId, PROD.PROD_NME AS prodNme,
			HIS.PRICE AS price
		from tb_CUST_PROD_HIS HIS, tb_CUST CUST, tb_PROD PROD 
		where CUST.CUST_ID = HIS.CUST_ID and PROD.PROD_ID = HIS.PROD_ID
		<isNotNull property="custId" prepend="and"> HIS.CUST_ID = #custId#</isNotNull>
		<isNotNull property="prodId" prepend="and"> HIS.PROD_ID = #prodId#</isNotNull>
		order by HIS.ID DESC LIMIT 1
	</select>
	<select id="selectOffer" parameterClass="int" resultMap="OfferMasterResult">
		select * 
		from 
			tb_OFFER_MASTER M LEFT OUTER JOIN tb_OFFER_DETAIL D ON M.ID = D.MASTER_ID,
			tb_PROD P, 
			tb_STOCK S,
			tb_CUST C,
			tb_USER U
		where
			P.PROD_ID = D.PROD_ID and 
			M.STOCK_ID = S.STOCK_ID and
			M.CUST_ID = C.CUST_ID and 
			M.DELIVERY_USER_ID = U.USER_ID and 
			M.STATUS = 'N' and
			M.ID = #value#
	</select>
	<select id="selectOffers" parameterClass="map" resultMap="OfferMasterResult">
		select * 
		from 
			tb_OFFER_MASTER M LEFT OUTER JOIN tb_OFFER_DETAIL D ON M.ID = D.MASTER_ID,
			tb_PROD P, 
			tb_STOCK S,
			tb_CUST C,
			tb_USER U 
		where
			P.PROD_ID = D.PROD_ID and 
			M.STOCK_ID = S.STOCK_ID and
			M.CUST_ID = C.CUST_ID and
			M.DELIVERY_USER_ID = U.USER_ID and
			M.STATUS = 'N'
			<isNotNull property="masterId" prepend="and"> M.ID IN ($masterId$)</isNotNull>
			<isNotNull property="custId" prepend="and"> M.CUST_ID = #custId#</isNotNull>
			<isNotNull property="deliveryUserId" prepend="and"> M.DELIVERY_USER_ID = #deliveryUserId#</isNotNull>
			<isNotNull property="offerDate" prepend="and"> M.OFFER_DATE = #offerDate#</isNotNull>
			<isNotNull property="startDate" prepend="and"> M.OFFER_DATE <![CDATA[>=]]> #startDate#</isNotNull>
			<isNotNull property="endDate" prepend="and"> M.OFFER_DATE <![CDATA[<=]]> #endDate#</isNotNull>
			<isNotNull property="prodId" prepend="and"> P.PROD_ID = #prodId#</isNotNull>
			<isNotNull property="back" prepend="and"> M.BACK = #back#</isNotNull>
			<isNull property="back" prepend="and"> M.BACK IS NULL</isNull>
		order by M.CUST_ID ASC, M.OFFER_DATE ASC
	</select>
	<select id="selectFactProdHis" parameterClass="FactProdHisVO" resultClass="FactProdHisVO">
		select
			FACT.FACT_ID AS factId, FACT.FACT_NME AS factNme,
			PROD.PROD_ID AS prodId, PROD.PROD_NME AS prodNme,
			HIS.PRICE AS price
		from tb_FACT_PROD_HIS HIS, tb_FACT FACT, tb_PROD PROD 
		where CUST.CUST_ID = HIS.CUST_ID and PROD.PROD_ID = HIS.PROD_ID
		<isNotNull property="factId" prepend="and"> HIS.FACT_ID = #factId#</isNotNull>
		<isNotNull property="prodId" prepend="and"> HIS.PROD_ID = #prodId#</isNotNull>
		order by HIS.ID DESC LIMIT 1
	</select>
	<select id="selectPurchase" parameterClass="int" resultMap="PurchaseMasterResult">
		select * 
		from 
			tb_PURCHASE_MASTER M LEFT OUTER JOIN tb_PURCHASE_DETAIL D ON M.ID = D.MASTER_ID,
			tb_PROD P, 
			tb_STOCK S,
			tb_FACT F
		where
			P.PROD_ID = D.PROD_ID and 
			M.STOCK_ID = S.STOCK_ID and
			M.FACT_ID = F.FACT_ID and 
			M.STATUS = 'N' and
			M.ID = #value#
	</select>
	<select id="selectPurchases" parameterClass="map" resultMap="PurchaseMasterResult">
		select * 
		from 
			tb_PURCHASE_MASTER M LEFT OUTER JOIN tb_PURCHASE_DETAIL D ON M.ID = D.MASTER_ID,
			tb_PROD P, 
			tb_STOCK S,
			tb_FACT F 
		where
			P.PROD_ID = D.PROD_ID and 
			M.STOCK_ID = S.STOCK_ID and
			M.FACT_ID = F.FACT_ID and
			M.STATUS = 'N' and
			M.FACT_ID = #factId#
			<isNotNull property="back" prepend="and"> M.BACK = #back#</isNotNull>
			<isNull property="back" prepend="and"> M.BACK IS NULL</isNull>
		order by M.ID DESC
	</select>
	<select id="selectProdStockQty" parameterClass="int" resultMap="ProdStockQtyResult">
		select * 
		from 
			tb_PROD_STOCK_QTY PSQ,
			tb_PROD P, 
			tb_STOCK S
		where
			PSQ.PROD_ID = P.PROD_ID and 
			PSQ.STOCK_ID = S.STOCK_ID
			<isParameterPresent prepend="and"> PSQ.PROD_ID = #value#</isParameterPresent>
	</select>
	<select id="selectUnReceivedOffers" parameterClass="map" resultMap="UnReceivedOfferResult">
		select * 
		from
			tb_OFFER_MASTER M,
			tb_CUST C
		where
			M.BACK IS NULL and
			M.STATUS = 'N' and
			M.RECEIVE_AMT <![CDATA[<]]> TOTAL and
			M.CUST_ID = C.CUST_ID
			<isNotNull property="custId" prepend="and"> M.CUST_ID = #custId#</isNotNull>
			<isNull property="beforeFlag" prepend="and"> M.OFFER_DATE <![CDATA[>=]]> #startDate#</isNull>
			and M.OFFER_DATE <![CDATA[<=]]> #endDate#
		order by M.CUST_ID ASC, M.OFFER_DATE ASC
	</select>
	<select id="selectOfferQty" parameterClass="map" resultClass="java.util.HashMap">
		select M.CUST_ID AS CUST_ID, C.CUST_NME AS CUST_NME, SUM(D.QTY) AS QTY, P.UNIT AS UNIT
		from tb_OFFER_MASTER M, tb_OFFER_DETAIL D, tb_CUST C, tb_PROD P
		where 
			M.STATUS = 'N'
			<isNotNull property="back" prepend="and"> M.BACK = #back#</isNotNull>
			<isNull property="back" prepend="and"> M.BACK IS NULL</isNull>
			and DATE_ForMAT(M.OFFER_DATE,'%Y%m') = #month# and 
			M.ID = D.MASTER_ID and 
			M.CUST_ID = C.CUST_ID and
			D.PROD_ID = P.PROD_ID and
			D.PROD_ID = #prodId#
		GROUP BY M.CUST_ID
	</select>
	<select id="selectorderProducts" parameterClass="string" resultMap="ProdResult">
		select * from tb_PROD P where P.PROD_ID IN (
			select DISTINCT PROD_ID from tb_OFFER_MASTER where CUST_ID IN (
				select CUST_ID from tb_CUST where CATG = #value#
			)
		)
	</select>

	<select id="selectTotalDiscount" parameterClass="string" resultClass="decimal">
		select SUM(M.DISCOUNT) 
		from
			tb_OFFER_MASTER M
		where
			M.BACK IS NULL and
			M.STATUS = 'N' and
			DATE_ForMAT(M.OFFER_DATE,'%Y%m') = #month#
	</select>
	
	<select id="selectTopDiscountCusts" parameterClass="string" resultClass="java.util.HashMap">
		select M.CUST_ID AS CUST_ID, SUM(M.DISCOUNT) AS DISCOUNT, C.CUST_NME AS CUST_NME 
		from
			tb_OFFER_MASTER M, tb_CUST C
		where
			M.CUST_ID = C.CUST_ID and
			M.BACK IS NULL and
			M.STATUS = 'N' and 
			M.DISCOUNT != 0 and
			DATE_ForMAT(M.OFFER_DATE,'%Y%m') = #month#
		GROUP BY M.CUST_ID
		order by DISCOUNT DESC
	</select>

	<select id="selectDiscountOffers" parameterClass="map" resultMap="TopDiscountOfferResult">
		select *
		from
			tb_OFFER_MASTER M
		where
			M.BACK IS NULL and
			M.STATUS = 'N' and 
			M.DISCOUNT != 0 and
			DATE_ForMAT(M.OFFER_DATE,'%Y%m') = #month# and
			M.CUST_ID = #custId#
		order by M.DISCOUNT DESC
	</select>
	
	<select id="selectCustByOfferDate" parameterClass="string" resultMap="PickCustResult">
		select DISTINCT X.CUST_ID,Y.CUST_NME from tb_OFFER_MASTER X, tb_CUST Y 
		where X.CUST_ID = Y.CUST_ID and X.OFFER_DATE = STR_TO_DATE(#offerDate#, '%Y/%m/%d') and X.STATUS != 'D'
		order by X.ID
	</select>
	
	<select id="selectProdQtyByOfferDate" parameterClass="map" resultMap="PickProdResult">
		select 
		    A.PROD_ID,
		    A.PROD_NME,
		    A.UNIT,
		    A.SUM_QTY,
		    B.ID MASTER_ID,
		    B.CUST_ID,
		    B.CUST_NME,
		    B.QTY
		from
		    (select D.MASTER_ID, D.PROD_ID, P.PROD_NME, P.UNIT, SUM(D.QTY) SUM_QTY
		    from tb_OFFER_DETAIL D, tb_PROD P
		    where D.PROD_ID = P.PROD_ID and D.MASTER_ID IN (
		    	select X.ID from tb_OFFER_MASTER X where X.OFFER_DATE = STR_TO_DATE(#offerDate#, '%Y/%m/%d') and X.STATUS != 'D'
		    	<isNotNull property="custs" prepend="and"> X.CUST_ID IN 
					<iterate property="custs" open="(" close=")" conjunction="," > #custs[]# </iterate>
				</isNotNull>
		    	) GROUP BY D.PROD_ID) A,
		    (select M.ID, M.CUST_ID, C.CUST_NME, D.PROD_ID, D.QTY
		    from tb_OFFER_MASTER M, tb_OFFER_DETAIL D, tb_CUST C where D.MASTER_ID IN (
		        select X.ID from tb_OFFER_MASTER X where X.OFFER_DATE = STR_TO_DATE(#offerDate#, '%Y/%m/%d') and X.STATUS != 'D'
		    	<isNotNull property="custs" prepend="and"> X.CUST_ID IN 
					<iterate property="custs" open="(" close=")" conjunction="," > #custs[]# </iterate>
				</isNotNull>
		        ) and M.ID = D.MASTER_ID and M.CUST_ID = C.CUST_ID) B
		where A.PROD_ID = B.PROD_ID
		order by A.PROD_NME
	</select>
	
</sqlMap>