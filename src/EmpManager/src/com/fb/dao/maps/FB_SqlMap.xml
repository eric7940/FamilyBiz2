<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="FB">

	<typeAlias alias="LookupVO"			type="com.fb.vo.LookupVO" />
	<typeAlias alias="MenuVO"			type="com.fb.vo.MenuVO" />
	<typeAlias alias="MenuFuncVO"		type="com.fb.vo.MenuFuncVO" />
	<typeAlias alias="UserVO"			type="com.fb.vo.UserVO" />
	<typeAlias alias="CustVO"			type="com.fb.vo.CustVO" />
	<typeAlias alias="ProdVO"			type="com.fb.vo.ProdVO" />
	<typeAlias alias="FactVO"			type="com.fb.vo.FactVO" />
	<typeAlias alias="StockVO"			type="com.fb.vo.StockVO" />
	<typeAlias alias="CustProdHisVO"		type="com.fb.vo.CustProdHisVO" />
	<typeAlias alias="FactProdHisVO"		type="com.fb.vo.FactProdHisVO" />
	<typeAlias alias="ProdStockQtyVO"	type="com.fb.vo.ProdStockQtyVO" />
	<typeAlias alias="OfferMasterVO"		type="com.fb.vo.OfferMasterVO" />
	<typeAlias alias="OfferDetailVO" 	type="com.fb.vo.OfferDetailVO" />
	<typeAlias alias="PurchaseMasterVO"	type="com.fb.vo.PurchaseMasterVO" />
	<typeAlias alias="PurchaseDetailVO"	type="com.fb.vo.PurchaseDetailVO" />
	<typeAlias alias="PickProdVO"		type="com.fb.vo.PickProdVO" />
	<typeAlias alias="PickOfferVO"		type="com.fb.vo.PickOfferVO" />

	<resultMap id="UserResult" class="UserVO">
		<result property="id"		column="u.id"/>
		<result property="name"		column="u.name"/>
		<result property="grade"		column="u.grade"/>
	</resultMap>
	<resultMap id="MenuResult" class="MenuVO">
		<result property="id"			column="m.id"/>
		<result property="label"			column="m.label"/>
		<result property="folderFlag"	column="m.folder_flag"/>
		<result property="displayOrder"	column="m.display_order"/>
	</resultMap>
	<resultMap id="MenuFuncResult" class="MenuFuncVO">
		<result property="id"			column="mf.id"/>
		<result property="label"			column="mf.label"/>
		<result property="url"			column="mf.url"/>
		<result property="linkType"		column="mf.link_type"/>
		<result property="displayOrder"	column="mf.display_order"/>
		<result property="menu"			resultMap="FB.MenuResult"/>
	</resultMap>
	<resultMap id="CustResult" class="CustVO">
		<result property="id"			column="c.id"/>
		<result property="name"			column="c.name"/>
		<result property="bizNo"			column="c.biz_no"/>
		<result property="deliverAddr"	column="c.deliver_addr"/>
		<result property="tel"			column="c.tel"/>
		<result property="memo"			column="c.memo"/>
	</resultMap>
	<resultMap id="ProdResult" class="ProdVO">
		<result property="id"			column="p.id"/>
		<result property="name"			column="p.name"/>
		<result property="unit"			column="p.unit"/>
		<result property="price"			column="p.price"/>
		<result property="cost"			column="p.cost"/>
		<result property="saveQty"		column="p.save_qty"/>
	</resultMap>
	<resultMap id="FactResult" class="FactVO">
		<result property="id"			column="f.id"/>
		<result property="name"			column="f.name"/>
		<result property="bizNo"			column="f.biz_no"/>
		<result property="contact"		column="f.contact"/>
		<result property="addr"			column="f.addr"/>
		<result property="tel"			column="f.tel"/>
		<result property="memo"			column="f.memo"/>
	</resultMap>
	<resultMap id="StockResult" class="StockVO">
		<result property="id"			column="s.id"/>
		<result property="name"			column="s.name"/>
		<result property="addr"			column="s.addr"/>
	</resultMap>
	<resultMap id="OfferMasterResult" class="OfferMasterVO" groupBy="id">
		<result property="id"			column="m.id"/>
		<result property="custId"		column="m.cust_id"/>
		<result property="deliveryUserId"	column="m.delivery_user_id"/>
		<result property="stockId"		column="m.stock_id"/>
		<result property="offerDate"		column="m.offer_date"/>
		<result property="invoiceNbr"	column="m.invoice_nbr"/>
		<result property="amt"			column="m.amt"/>
		<result property="discount"		column="m.discount"/>
		<result property="total"			column="m.total"/>
		<result property="cost"			column="m.cost"/>
		<result property="receiveAmt"	column="m.receive_amt"/>
		<result property="memo"			column="m.memo"/>
		<result property="back"			column="m.back"/>
		<result property="status"		column="m.status"/>
		<result property="ustamp"		column="m.ustamp"/>
		<result property="cust"			resultMap="FB.CustResult"/>
		<result property="deliveryUser"	resultMap="FB.UserResult"/>
		<result property="stock"			resultMap="FB.StockResult"/>
		<result property="details"		resultMap="FB.OfferDetailResult"/>
	</resultMap>
	<resultMap id="OfferDetailResult" class="OfferDetailVO">
		<result property="id"			column="d.id"/>
		<result property="masterId"		column="d.master_id"/>
		<result property="prodId"		column="d.prod_id"/>
		<result property="qty"			column="d.qty"/>
		<result property="amt"			column="d.amt"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>
	<resultMap id="PurchaseMasterResult" class="PurchaseMasterVO" groupBy="id">
		<result property="id"			column="m.id"/>
		<result property="factId"		column="m.fact_id"/>
		<result property="stockId"		column="m.stock_id"/>
		<result property="purchaseDate"	column="m.purchase_date"/>
		<result property="invoiceNbr"	column="m.invoice_nbr"/>
		<result property="amt"			column="m.amt"/>
		<result property="discount"		column="m.discount"/>
		<result property="total"			column="m.total"/>
		<result property="memo"			column="m.memo"/>
		<result property="back"			column="m.back"/>
		<result property="status"		column="m.status"/>
		<result property="ustamp"		column="m.ustamp"/>
		<result property="fact"			resultMap="FB.FactResult"/>
		<result property="stock"			resultMap="FB.StockResult"/>
		<result property="details"		resultMap="FB.PurchaseDetailResult"/>
	</resultMap>
	<resultMap id="PurchaseDetailResult" class="PurchaseDetailVO">
		<result property="id"			column="d.id"/>
		<result property="masterId"		column="d.master_id"/>
		<result property="qty"			column="d.qty"/>
		<result property="amt"			column="d.amt"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>	
	<resultMap id="ProdStockQtyResult" class="ProdStockQtyVO">
		<result property="stockId"		column="psq.stock_id"/>
		<result property="prodId"		column="psq.prod_id"/>
		<result property="qty"			column="psq.qty"/>
		<result property="stock"			resultMap="FB.StockResult"/>
		<result property="prod"			resultMap="FB.ProdResult"/>
	</resultMap>
	<resultMap id="UnReceivedOfferResult" class="OfferMasterVO">
		<result property="id"			column="m.id"/>
		<result property="offerDate"		column="m.offer_date"/>
		<result property="invoiceNbr"	column="m.invoice_nbr"/>
		<result property="amt"			column="m.amt"/>
		<result property="discount"		column="m.discount"/>
		<result property="total"			column="m.total"/>
		<result property="cost"			column="m.cost"/>
		<result property="receiveAmt"	column="m.receive_amt"/>
		<result property="memo"			column="m.memo"/>
		<result property="back"			column="m.back"/>
		<result property="cust"			resultMap="FB.CustResult"/>
	</resultMap>
	<resultMap id="TopDiscountOfferResult" class="OfferMasterVO">
		<result property="id"			column="m.id"/>
		<result property="offerDate"		column="m.offer_date"/>
		<result property="amt"			column="m.amt"/>
		<result property="discount"		column="m.discount"/>
		<result property="receiveAmt"	column="m.receive_amt"/>
	</resultMap>
	<resultMap id="PickCustResult" class="CustVO">
		<result property="id"			column="c.id"/>
		<result property="name"			column="c.name"/>
	</resultMap>
	<resultMap id="PickProdResult" class="PickProdVO" groupBy="prodId">
		<result property="prodId"		column="A.PROD_id"/>
		<result property="prodNme"		column="A.PROD_NME"/>
		<result property="unit"			column="A.UNIT"/>
		<result property="sumQty"		column="A.sum_QTY"/>
		<result property="offers"		resultMap="FB.PickOfferResult"/>
	</resultMap>
	<resultMap id="PickOfferResult" class="PickOfferVO">
		<result property="masterId"		column="MASTER_id"/>
		<result property="custId"		column="B.CUST_id"/>
		<result property="custNme"		column="B.CUST_NME"/>
		<result property="qty"			column="B.QTY"/>
	</resultMap>

	<parameterMap id="getSequenceParam" class="map">
		<parameter property="PI_SEQ_ID"		mode="IN"	jdbcType="VARCHAR" />
		<parameter property="PI_SEQ_PREFIX"	mode="IN"	jdbcType="VARCHAR" />
		<parameter property="PO_SEQ_NBR"	mode="OUT"	jdbcType="INTEGER" />
	</parameterMap>
	<procedure id="getSequence" parameterMap="getSequenceParam">
		{call sp_get_sequence(?, ?, ?)}
	</procedure>

	<insert id="insertLookup" parameterClass="LookupVO">
		insert into tb_lookup 
		values (#type#, #code#, #value#, #display#, #displayOrder#, #desc#
		)
	</insert>
	<insert id="insertFuncAuth" parameterClass="map">
		insert into tb_func_auth values (#userClass#, #funcId#)
	</insert>
	<insert id="insertMenuFunc" parameterClass="MenuFuncVO">
		insert into tb_menu_func values (null, #label#, #menuId#, #url#, #linkType#, 'Y', #displayOrder#)
	</insert>
	<insert id="insertMenu" parameterClass="MenuVO">
		insert into tb_menu values (null, #label#, null, 'Y', #displayOrder#, #folderFlag#)
	</insert>
	<insert id="insertCust" parameterClass="CustVO">
		insert into tb_cust values (null, #name#, #bizNo#, #deliverAddr#, #tel#, #memo#, '', #ustamp#, now())
	</insert>
	<insert id="insertProd" parameterClass="ProdVO">
		insert into tb_prod values (null, #name#, #unit#, #price#, #cost#, #saveQty#, '', #ustamp#, now())
	</insert>
	<insert id="insertFact" parameterClass="FactVO">
		insert into tb_fact values (null, #name#, #bizNo#, #contact#, #addr#, #tel#, #memo#, '', #ustamp#, now())
	</insert>
	<insert id="insertProdStockQty" parameterClass="ProdStockQtyVO">
		insert into tb_prod_stock_qty values (#stockId#, last_insert_id(), #qty#)
	</insert>
	<insert id="insertOfferMaster" parameterClass="OfferMasterVO">
		insert into tb_offer_master values (#id#, #offerDate#, #custId#, #invoiceNbr#, #stockId#, #amt#, #discount#, #total#, #cost#, #receiveAmt#, #memo#, #back#, #status#, #deliveryUserId#, #ustamp#, now())
	</insert>
	<insert id="insertOfferDetail" parameterClass="OfferDetailVO">
		insert into tb_offer_detail values (#id#, #masterId#, #prodId#, #qty#, #amt#)
	</insert>
	<insert id="insertCustProdHis" parameterClass="CustProdHisVO">
		insert into tb_cust_prod_his values (#custId#, #prodId#, #price#, #offerId#)
	</insert>
	<insert id="insertPurchaseMaster" parameterClass="PurchaseMasterVO">
		insert into tb_purchase_master values (#id#, #purchaseDate#, #factId#, #invoiceNbr#, #stockId#, #amt#, #discount#, #total#, #memo#, #back#, #status#, #ustamp#, now())
	</insert>
	<insert id="insertPurchaseDetail" parameterClass="PurchaseDetailVO">
		insert into tb_purchase_detail values (#id#, #masterId#, #prodId#, #qty#, #amt#)
	</insert>
	<insert id="insertFactProdHis" parameterClass="FactProdHisVO">
		insert into tb_fact_prod_his values (#factId#, #prodId#, #price#, #purchaseId#)
	</insert>
	
	<update id="updateLookup" parameterClass="LookupVO">
		update tb_lookup set 
			code = #code#, value = #value#, display = #display#, 
			display_order = #displayOrder#, desc = #desc#
		where type = #type#
	</update>
	<update id="updateMenuFunc" parameterClass="MenuFuncVO">
		update tb_menu_func set 
			label = #label#, menu_id = #menuId#, url = #url#, link_type = #linkType#, 
			display_order = #displayOrder# 
		where id = #id#
	</update>
	<update id="updateMenu" parameterClass="MenuVO">
		update tb_menu set 
			label = #label#, folder_flag = #folderFlag#, display_order = #displayOrder# 
		where id = #id#
	</update>
	<update id="updateCust" parameterClass="CustVO">
		update tb_cust set 
			name = #name#, biz_no = #bizNo#, deliver_addr = #deliverAddr#, tel = #tel#, memo = #memo#, 
			ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>
	<update id="updateFact" parameterClass="FactVO">
		update tb_fact set 
			name = #name#, biz_no = #bizNo#, contact = #contact#, 
			addr = #addr#,  tel = #tel#, memo = #memo#, 
			ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>
	<update id="updateProd" parameterClass="ProdVO">
		update tb_prod set 
			name = #name#, unit = #unit#, price = #price#, save_qty = #saveQty#, 
			ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>
	<update id="updateProdCost" parameterClass="ProdVO">
		update tb_prod set cost = #cost#, ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>
	<update id="updateOfferMaster" parameterClass="OfferMasterVO">
		update tb_offer_master 
		set 
			delivery_user_id = #deliveryUserId#,
			offer_date = #offerDate#,
			invoice_nbr = #invoiceNbr#, 
			stock_id = #stockId#, 
			amt = #amt#, 
			discount = #discount#, 
			total = #total#,
			cost = #cost#, 
			receive_amt = #receiveAmt#, 
			memo = #memo#, 
			status = #status#,
			ustamp = #ustamp#,
			tstamp = now()
		where id = #id#
	</update>
	<update id="updateOfferReceiveAmt" parameterClass="OfferMasterVO">
		update tb_offer_master set receive_amt = #receiveAmt#, ustamp = #ustamp#, tstamp = now() where id = #id#
	</update>
	<update id="updateProdStockQty" parameterClass="ProdStockQtyVO">
		update tb_prod_stock_qty set qty = qty + #qty# 
		where stock_id = #stockId# and prod_id = #prodId#
	</update>

	<delete id="deleteLookup" parameterClass="LookupVO">
		delete from tb_lookup where type = #type#
	</delete>
	<update id="deleteMenuFunc" parameterClass="int">
		update tb_menu_func 
		set status = 'D' 
		where id = #value#
	</update>
	<update id="deleteMenu" parameterClass="int">
		update tb_menu 
		set status = 'D' 
		where id = #value#
	</update>
	<update id="deleteFuncAuth" parameterClass="string">
		delete from tb_func_auth where grade = #value#
	</update>
	<update id="deleteCust" parameterClass="CustVO">
		update tb_cust set status = 'D', ustamp = #ustamp#, tstamp = now()
		where id = #id#
	</update>
	<update id="deleteCusts" parameterClass="string">
		update tb_cust set status = 'D', ustamp = #ustamp#, tstamp = now() 
		where id in ($value$)
	</update>
	<update id="deleteFact" parameterClass="FactVO">
		update tb_fact set status = 'D', ustamp = #ustamp#, tstamp = now()
		where id = #id#
	</update>
	<update id="deleteFacts" parameterClass="string">
		update tb_fact set status = 'D', ustamp = #ustamp#, tstamp = now() 
		where id in ($value$)
	</update>	
	<update id="deleteProd" parameterClass="ProdVO">
		update tb_prod set status = 'D', ustamp = #ustamp#, tstamp = now()
		where id = #id#
	</update>
	<update id="deleteProds" parameterClass="string">
		update tb_prod set status = 'D', ustamp = #ustamp#, tstamp = now()
		where id in ($value$)
	</update>
	<delete id="deleteCustProdHis" parameterClass="string">
		delete from tb_cust_prod_his where offer_id = #value#
	</delete>
	<update id="deleteOffer" parameterClass="OfferMasterVO">
		update tb_offer_master set status = 'D', ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>
	<delete id="deleteOfferDetails" parameterClass="String">
		delete from tb_offer_detail where master_id = #value#
	</delete>
	<update id="deletePurchase" parameterClass="PurchaseMasterVO">
		update tb_purchase_master set status = 'D', ustamp = #ustamp#, tstamp = now() 
		where id = #id#
	</update>

	<select id="selectLookup" parameterClass="LookupVO" resultClass="LookupVO">
		select code, value from tb_lookup where type = #type# and display = #display# order by display_order
	</select>
	<select id="selectAuthMenuFuncs" parameterClass="map" resultMap="MenuFuncResult">
		select * 
		from
			tb_func_auth fa, 
			tb_menu_func mf, 
			tb_menu m 
		where 
			fa.grade = #grade# and 
			fa.func_id = mf.id and 
			mf.menu_id = m.id and 
			mf.status = 'Y' and
			m.status = 'Y'
		<isNotNull property="url" prepend="and"> mf.url like #url#</isNotNull>
		order by m.display_order, mf.display_order
	</select>	
	<select id="selectMenu" parameterClass="MenuVO" resultMap="MenuResult">
		select * from tb_menu m
		where m.status = 'Y'
		<isNotNull property="id" prepend="and"> m.id = #id#</isNotNull>
		order by m.id asc
	</select>
	<select id="selectMenuFunc" parameterClass="MenuFuncVO" resultMap="MenuFuncResult">
		select * from tb_menu m, tb_menu_func mf
		where mf.status = 'Y' and m.id = mf.menu_id
		<isNotNull property="id" prepend="and"> mf.id = #id#</isNotNull>
		order by mf.id asc
	</select>
	<select id="selectUser" parameterClass="UserVO" resultMap="UserResult">
		select * from tb_user u
		where u.status = ''
		<isNotNull property="id" prepend="and"> u.id = #id#</isNotNull>
		<isNotNull property="passwd" prepend="and"> u.passwd = password(#passwd#)</isNotNull>
		<isNotNull property="grade" prepend="and"> u.grade in ($grade$)</isNotNull>
	</select>
	<select id="selectStock" parameterClass="int" resultMap="StockResult">
		select * from tb_stock where id = #value#
	</select>
	<select id="selectCustCount" parameterClass="CustVO" resultClass="int">
		select count(id) from tb_cust c
		where c.status = ''
		<isNotNull property="id" prepend="and"> c.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> c.name like #name#</isNotNull>
	</select>
	<select id="selectCust" parameterClass="CustVO" resultMap="CustResult">
		select * from tb_cust c
		where c.status = ''
		<isNotNull property="id" prepend="and"> c.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> c.name like #name#</isNotNull>
		order by c.name
	</select>
	<select id="selectFactCount" parameterClass="FactVO" resultClass="int">
		select count(id) from tb_fact f
		where f.status = ''
		<isNotNull property="id" prepend="and"> f.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> f.name like #name#</isNotNull>
	</select>
	<select id="selectFact" parameterClass="FactVO" resultMap="FactResult">
		select * from tb_fact f
		where f.status = ''
		<isNotNull property="id" prepend="and"> f.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> f.name like #name#</isNotNull>
		order by f.name asc
	</select>
	<select id="selectProdCount" parameterClass="ProdVO" resultClass="int">
		select count(id) from tb_prod p
		where p.status = ''
		<isNotNull property="id" prepend="and"> p.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> p.name like #name#</isNotNull>
	</select>
	<select id="selectProd" parameterClass="ProdVO" resultMap="ProdResult">
		select * from tb_prod p
		where p.status = ''
		<isNotNull property="id" prepend="and"> p.id = #id#</isNotNull>
		<isNotNull property="name" prepend="and"> p.name like #name#</isNotNull>
		order by p.name asc
	</select>
	<select id="selectProdByCust" parameterClass="map" resultClass="ProdVO">
		(select id, name, price from tb_prod
		where 
			id not in (select prod_id from tb_cust_prod_his where cust_id = #custId#)
			<isNotNull property="prodName" prepend="and"> name like #prodName#</isNotNull>
		) union distinct
		(select his.prod_id as prod_id, prod.name as prod_name, his.price as price
			from tb_prod prod, tb_cust_prod_his his
			where
				his.cust_id = #custId# and
				prod.id = his.prod_id
				<isNotNull property="prodName" prepend="and"> prod.name like #prodName#</isNotNull>
		)
		order by prod_id asc
	</select>
	<select id="selectCustProdHis" parameterClass="CustProdHisVO" resultClass="CustProdHisVO">
		select
			cust.id as custId, cust.name as cust_name,
			prod.id as prodId, prod.name as prod_name,
			his.price as price
		from tb_cust_prod_his his, tb_cust cust, tb_prod prod 
		where cust.id = his.cust_id and prod.id = his.prod_id
		<isNotNull property="custId" prepend="and"> his.cust_id = #custId#</isNotNull>
		<isNotNull property="prodId" prepend="and"> his.prod_id = #prodId#</isNotNull>
		order by his.offer_id desc limit 1
	</select>
	<select id="selectOffer" parameterClass="String" resultMap="OfferMasterResult">
		select * 
		from 
			tb_offer_master m left outer join tb_offer_detail d on m.id = d.master_id,
			tb_prod p, 
			tb_stock s,
			tb_cust c,
			tb_user u
		where
			d.prod_id = p.id and 
			m.stock_id = s.id and
			m.cust_id = c.id and 
			m.delivery_user_id = u.id and 
			m.status = 'N' and
			m.id = #value#
	</select>
	<select id="selectOffers" parameterClass="map" resultMap="OfferMasterResult">
		select * 
		from 
			tb_offer_master m left outer join tb_offer_detail d on m.id = d.master_id,
			tb_prod p, 
			tb_stock s,
			tb_cust c,
			tb_user u 
		where
			d.prod_id = p.id and 
			m.stock_id = s.id and
			m.cust_id = c.id and
			m.delivery_user_id = u.id and
			m.status = 'N'
			<isNotNull property="masterId" prepend="and"> m.id in ($masterId$)</isNotNull>
			<isNotNull property="custId" prepend="and"> m.cust_id = #custId#</isNotNull>
			<isNotNull property="deliveryUserId" prepend="and"> m.delivery_user_id = #deliveryUserId#</isNotNull>
			<isNotNull property="offerDate" prepend="and"> m.offer_date = #offerDate#</isNotNull>
			<isNotNull property="startDate" prepend="and"> m.offer_date <![CDATA[>=]]> #startDate#</isNotNull>
			<isNotNull property="endDate" prepend="and"> m.offer_date <![CDATA[<=]]> #endDate#</isNotNull>
			<isNotNull property="prodId" prepend="and"> p.id = #prodId#</isNotNull>
			<isNotNull property="back" prepend="and"> m.back = #back#</isNotNull>
			<isNull property="back" prepend="and"> m.back is null</isNull>
		order by m.cust_id asc, m.offer_date asc
	</select>
	<select id="selectFactProdHis_TODO" parameterClass="FactProdHisVO" resultClass="FactProdHisVO">
		select
			fact.id as fact_id, fact.name as fact_name,
			prod.id as prod_id, prod.name as prod_name,
			his.price as price
		from tb_fact_prod_his his, tb_fact fact, tb_prod prod 
		where fact.id = his.fact_id and prod.id = his.prod_id
		<isNotNull property="factId" prepend="and"> his.fact_id = #factId#</isNotNull>
		<isNotNull property="prodId" prepend="and"> his.prod_id = #prodId#</isNotNull>
		order by his.purchase_id desc limit 1
	</select>
	<select id="selectPurchase" parameterClass="String" resultMap="PurchaseMasterResult">
		select * 
		from 
			tb_purchase_master m left outer join tb_purchase_detail d on m.id = d.master_id,
			tb_prod p, 
			tb_stock s,
			tb_fact f
		where
			d.prod_id = p.id and 
			m.stock_id = s.id and
			m.fact_id = f.id and 
			m.status = 'N' and
			m.id = #value#
	</select>
	<select id="selectPurchases" parameterClass="map" resultMap="PurchaseMasterResult">
		select * 
		from 
			tb_purchase_master m left outer join tb_purchase_detail d on m.id = d.master_id,
			tb_prod p, 
			tb_stock s,
			tb_fact f 
		where
			d.prod_id = p.id and 
			m.stock_id = s.stock_id and
			m.fact_id = f.id and
			m.status = 'N' and
			m.fact_id = #factId#
			<isNotNull property="back" prepend="and"> m.back = #back#</isNotNull>
			<isNull property="back" prepend="and"> m.back is null</isNull>
		order by m.id desc
	</select>
	<select id="selectProdStockQtyCount" parameterClass="map" resultClass="int">
		select count(*) 
		from 
			tb_prod_stock_qty psq,
			tb_prod p, 
			tb_stock s
		where
			psq.prod_id = p.id and 
			psq.stock_id = s.id and
			psq.stock_id = #stockId#
			<isNotNull property="keyword" prepend="and"> (psq.prod_id = #prodId# or p.name like #keyword#)</isNotNull>
	</select>
	<select id="selectProdStockQty" parameterClass="map" resultMap="ProdStockQtyResult">
		select * 
		from 
			tb_prod_stock_qty psq,
			tb_prod p, 
			tb_stock s
		where
			psq.prod_id = p.id and 
			psq.stock_id = s.id and
			psq.stock_id = #stockId#
			<isNotNull property="keyword" prepend="and"> (psq.prod_id = #prodId# or p.name like #keyword#)</isNotNull>
	</select>
	<select id="selectUnReceivedOffers" parameterClass="map" resultMap="UnReceivedOfferResult">
		select * 
		from
			tb_offer_master m,
			tb_cust c
		where
			m.back is null and
			m.status = 'N' and
			m.receive_amt <![CDATA[<]]> m.total and
			m.cust_id = c.id
			<isNotNull property="custId" prepend="and"> m.cust_id = #custId#</isNotNull>
			<isNull property="beforeFlag" prepend="and"> m.offer_date <![CDATA[>=]]> #startDate#</isNull>
			and m.offer_date <![CDATA[<=]]> #endDate#
		order by m.cust_id asc, m.offer_date asc
	</select>
	<select id="selectOfferQty" parameterClass="map" resultClass="java.util.HashMap">
		select m.cust_id, c.name cust_name, sum(d.qty) as qty, p.unit
		from tb_offer_master m, tb_offer_detail d, tb_cust c, tb_prod p
		where 
			m.status = 'N'
			<isNotNull property="back" prepend="and"> m.back = #back#</isNotNull>
			<isNull property="back" prepend="and"> m.back is null</isNull>
			and date_format(m.offer_date,'%Y%m') = #month# and 
			m.id = d.master_id and 
			m.cust_id = c.id and
			d.prod_id = p.id and
			d.prod_id = #prodId#
		group by m.cust_id
	</select>
	<select id="selectOrderProducts" parameterClass="string" resultMap="ProdResult">
		select * from tb_prod p where p.id in (
			select distinct prod_id from tb_offer_master where cust_id in (
				select id from tb_cust where catg = #value#
			)
		)
	</select>

	<select id="selectTotalDiscount" parameterClass="string" resultClass="decimal">
		select sum(m.discount) 
		from
			tb_offer_master M
		where
			m.back is null and
			m.status = 'N' and
			date_format(m.offer_date,'%Y%m') = #month#
	</select>
	
	<select id="selectTopDiscountCusts" parameterClass="string" resultClass="java.util.HashMap">
		select m.cust_id, sum(m.discount) as discount, c.name as cust_name
		from
			tb_offer_master m, tb_cust c
		where
			m.cust_id = c.id and
			m.back is null and
			m.status = 'N' and 
			m.discount != 0 and
			date_format(m.offer_date,'%Y%m') = #month#
		group by m.cust_id
		order by m.discount desc
	</select>

	<select id="selectDiscountOffers" parameterClass="map" resultMap="TopDiscountOfferResult">
		select *
		from
			tb_offer_master m
		where
			m.back is null and
			m.status = 'N' and 
			m.discount != 0 and
			date_format(m.offer_date,'%Y%m') = #month# and
			m.cust_id = #custId#
		order by m.discount desc
	</select>
	
	<select id="selectCustByOfferDate" parameterClass="string" resultMap="PickCustResult">
		select distinct c.id, c.name 
		from tb_offer_master m, tb_cust c 
		where m.cust_id = c.id and m.offer_date = str_to_date(#offerDate#, '%Y/%m/%d') and m.status != 'D'
		order by m.id
	</select>
	
	<select id="selectProdQtyByOfferDate" parameterClass="map" resultMap="PickProdResult">
		select 
		    a.prod_id,
		    a.name prod_name,
		    a.unit,
		    a.sum_qty,
		    b.id master_id,
		    b.cust_id,
		    b.name cust_name,
		    b.qty
		from
		    (select d.master_id, d.prod_id, p.name, p.unit, sum(d.qty) sum_qty
		    from tb_offer_detail d, tb_prod p
		    where d.prod_id = p.id and d.master_id in (
		    	select x.id from tb_offer_master x where x.offer_date = str_to_date(#offerDate#, '%Y/%m/%d') and x.status != 'D'
		    		<isNotNull property="custs" prepend="and"> x.cust_id in 
					<iterate property="custs" open="(" close=")" conjunction="," > #custs[]# </iterate>
				</isNotNull>
		    	) group by d.prod_id) a,
		    (select m.id, m.cust_id, c.name, d.prod_id, d.qty
		    from tb_offer_master m, tb_offer_detail d, tb_cust c where d.master_id in (
		        select x.id from tb_offer_master x where x.offer_date = str_to_date(#offerDate#, '%Y/%m/%d') and x.status != 'D'
		    		<isNotNull property="custs" prepend="and"> x.cust_id in 
					<iterate property="custs" open="(" close=")" conjunction="," > #custs[]# </iterate>
				</isNotNull>
		        ) and m.id = d.master_id and m.cust_id = c.id) b
		where a.prod_id = b.prod_id
		order by a.name
	</select>
	
	<select id="selectStocks" resultMap="StockResult">
		select * from tb_stock s;
	</select>
</sqlMap>